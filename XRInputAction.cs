//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/XRInputManager/XRInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @XRInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @XRInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""XRInputAction"",
    ""maps"": [
        {
            ""name"": ""RightHandOculus"",
            ""id"": ""a2ef4665-89c9-4d09-8f20-86b2a99ff5d0"",
            ""actions"": [
                {
                    ""name"": ""Stick"",
                    ""type"": ""Value"",
                    ""id"": ""d38ddda5-39bb-491f-8897-c7b74557223d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""e1dc8859-5024-4d0c-b830-6093dce8a2c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""90f04380-921d-4504-ae6c-29529ceda22c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryKey"",
                    ""type"": ""Button"",
                    ""id"": ""faeb22d6-d876-4caa-a794-798f0319ced1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouched"",
                    ""type"": ""Button"",
                    ""id"": ""5e92bd4c-a097-4079-a58b-b55d07e3698c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryKey"",
                    ""type"": ""Button"",
                    ""id"": ""f2e3fe94-62f8-4c6c-89e2-2c957315e976"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouched"",
                    ""type"": ""Button"",
                    ""id"": ""b0fca7ab-23ff-4f99-9643-782657af412c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""9495b8ee-625f-4720-b0af-c38748f33272"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickClicked"",
                    ""type"": ""Button"",
                    ""id"": ""cffd1f34-997f-4c1f-b431-b9bcc31ccf52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickTouched"",
                    ""type"": ""Button"",
                    ""id"": ""02ff6468-f45e-40f1-9198-2bb2fa2092ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""8b7f6d76-b2ef-4157-9052-81e2c613dfc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""db77c6a4-0898-47df-a918-152a6123ad13"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef53328f-bd46-4700-8378-4d05c44cd05d"",
                    ""path"": ""<OculusTouchController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""616715b7-b076-4bd7-918d-f8f87f3c7d27"",
                    ""path"": ""<OculusTouchController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03cc05b9-fcce-41af-9b6c-b4dbd5449d65"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7296e59-b94c-4afd-8785-1ca31c9055cd"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc844094-9342-4bed-81f6-6a0381273f32"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bab4fd2f-41f7-4679-97a3-c3d8f9ae5d1c"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fe41d19-b348-4c5c-915b-c809935e1f14"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickClicked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""820c91c8-0326-4fb2-a2b5-a0ef0f39732b"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18516d20-fb90-4844-be4c-ff2a56059e38"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LeftHandOculus"",
            ""id"": ""56f44a96-7a97-451b-869e-1f3a7855f8d4"",
            ""actions"": [
                {
                    ""name"": ""Stick"",
                    ""type"": ""Value"",
                    ""id"": ""b7790765-f6f5-432c-a2d3-3df12249df37"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""41521036-f4be-4984-b2da-f9aa7bd03e6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""abdf4ee9-1620-4442-a9b7-edebe9659e0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryKey"",
                    ""type"": ""Button"",
                    ""id"": ""71c2f0a1-6772-45d3-ae2e-cfccffc3261a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouched"",
                    ""type"": ""Button"",
                    ""id"": ""8aca1145-fc2f-404c-bd84-1848784f63b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryKey"",
                    ""type"": ""Button"",
                    ""id"": ""f9a07e88-2836-4933-b2c8-d287a7134def"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouched"",
                    ""type"": ""Button"",
                    ""id"": ""400005b8-6698-4a08-b206-68b9b6afaa0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""740266ca-dd28-4673-8ef0-561ae6bf6fe3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickClicked"",
                    ""type"": ""Button"",
                    ""id"": ""11fb4d82-10b4-4512-8b04-ee62c7e426e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickTouched"",
                    ""type"": ""Button"",
                    ""id"": ""7d3c6ce7-2da9-489d-a8d7-e46f3e76b2bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""2a64a825-0ec8-45cd-aa8d-57226fb640b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""239f354e-70b8-492f-acc2-5ef7990e9f47"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5af8078e-872f-470a-a9bb-66e21070081e"",
                    ""path"": ""<OculusTouchController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc882316-288a-4779-8bca-60793fd7f6b1"",
                    ""path"": ""<OculusTouchController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f59ef504-d8de-4303-ac18-85a9d90f9547"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47b5088f-e132-4de3-8b5d-a091af69d1fa"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""818fd324-698b-4a8d-a2a0-748092d3b663"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdc2f26f-acb7-4e98-ad74-366f0da8a7b0"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fd7c123-517e-4d60-ab23-5a8511cc7f3f"",
                    ""path"": ""<OculusTouchController>{LeftHand}/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""692f8e8f-da33-409f-9cf0-8d74152772f2"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickClicked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dcadd48-11fd-4b59-b7b4-9fbcee589e6c"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19f1b0b9-a4e8-4ccf-9ba1-9e28a2d826bb"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HeadSet"",
            ""id"": ""e78efc28-96c3-4fe3-bef6-260dbb406b14"",
            ""actions"": [
                {
                    ""name"": ""HeadSetPosition"",
                    ""type"": ""Value"",
                    ""id"": ""cc58f2bc-e076-47c7-bba8-6a004eb059ff"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftEyePosition"",
                    ""type"": ""Value"",
                    ""id"": ""0078be3c-9810-49ee-bfa0-41cf7f6e5f3e"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightEyePosition"",
                    ""type"": ""Value"",
                    ""id"": ""1b093228-cd7f-4f35-a4a9-3a03a5adc1ac"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e2754c82-6e86-472d-94e2-8c280b62eb83"",
                    ""path"": ""<OculusHMD>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadSetPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7650b9e1-c652-46c9-86e3-a5dc5c1b7065"",
                    ""path"": ""<XRHMD>/leftEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftEyePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cd786d5-832d-4525-9802-f53ccc80a5cf"",
                    ""path"": ""<XRHMD>/rightEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightEyePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // RightHandOculus
        m_RightHandOculus = asset.FindActionMap("RightHandOculus", throwIfNotFound: true);
        m_RightHandOculus_Stick = m_RightHandOculus.FindAction("Stick", throwIfNotFound: true);
        m_RightHandOculus_Grip = m_RightHandOculus.FindAction("Grip", throwIfNotFound: true);
        m_RightHandOculus_Tracked = m_RightHandOculus.FindAction("Tracked", throwIfNotFound: true);
        m_RightHandOculus_PrimaryKey = m_RightHandOculus.FindAction("PrimaryKey", throwIfNotFound: true);
        m_RightHandOculus_PrimaryTouched = m_RightHandOculus.FindAction("PrimaryTouched", throwIfNotFound: true);
        m_RightHandOculus_SecondaryKey = m_RightHandOculus.FindAction("SecondaryKey", throwIfNotFound: true);
        m_RightHandOculus_SecondaryTouched = m_RightHandOculus.FindAction("SecondaryTouched", throwIfNotFound: true);
        m_RightHandOculus_Start = m_RightHandOculus.FindAction("Start", throwIfNotFound: true);
        m_RightHandOculus_StickClicked = m_RightHandOculus.FindAction("StickClicked", throwIfNotFound: true);
        m_RightHandOculus_StickTouched = m_RightHandOculus.FindAction("StickTouched", throwIfNotFound: true);
        m_RightHandOculus_Trigger = m_RightHandOculus.FindAction("Trigger", throwIfNotFound: true);
        // LeftHandOculus
        m_LeftHandOculus = asset.FindActionMap("LeftHandOculus", throwIfNotFound: true);
        m_LeftHandOculus_Stick = m_LeftHandOculus.FindAction("Stick", throwIfNotFound: true);
        m_LeftHandOculus_Grip = m_LeftHandOculus.FindAction("Grip", throwIfNotFound: true);
        m_LeftHandOculus_Tracked = m_LeftHandOculus.FindAction("Tracked", throwIfNotFound: true);
        m_LeftHandOculus_PrimaryKey = m_LeftHandOculus.FindAction("PrimaryKey", throwIfNotFound: true);
        m_LeftHandOculus_PrimaryTouched = m_LeftHandOculus.FindAction("PrimaryTouched", throwIfNotFound: true);
        m_LeftHandOculus_SecondaryKey = m_LeftHandOculus.FindAction("SecondaryKey", throwIfNotFound: true);
        m_LeftHandOculus_SecondaryTouched = m_LeftHandOculus.FindAction("SecondaryTouched", throwIfNotFound: true);
        m_LeftHandOculus_Start = m_LeftHandOculus.FindAction("Start", throwIfNotFound: true);
        m_LeftHandOculus_StickClicked = m_LeftHandOculus.FindAction("StickClicked", throwIfNotFound: true);
        m_LeftHandOculus_StickTouched = m_LeftHandOculus.FindAction("StickTouched", throwIfNotFound: true);
        m_LeftHandOculus_Trigger = m_LeftHandOculus.FindAction("Trigger", throwIfNotFound: true);
        // HeadSet
        m_HeadSet = asset.FindActionMap("HeadSet", throwIfNotFound: true);
        m_HeadSet_HeadSetPosition = m_HeadSet.FindAction("HeadSetPosition", throwIfNotFound: true);
        m_HeadSet_LeftEyePosition = m_HeadSet.FindAction("LeftEyePosition", throwIfNotFound: true);
        m_HeadSet_RightEyePosition = m_HeadSet.FindAction("RightEyePosition", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RightHandOculus
    private readonly InputActionMap m_RightHandOculus;
    private IRightHandOculusActions m_RightHandOculusActionsCallbackInterface;
    private readonly InputAction m_RightHandOculus_Stick;
    private readonly InputAction m_RightHandOculus_Grip;
    private readonly InputAction m_RightHandOculus_Tracked;
    private readonly InputAction m_RightHandOculus_PrimaryKey;
    private readonly InputAction m_RightHandOculus_PrimaryTouched;
    private readonly InputAction m_RightHandOculus_SecondaryKey;
    private readonly InputAction m_RightHandOculus_SecondaryTouched;
    private readonly InputAction m_RightHandOculus_Start;
    private readonly InputAction m_RightHandOculus_StickClicked;
    private readonly InputAction m_RightHandOculus_StickTouched;
    private readonly InputAction m_RightHandOculus_Trigger;
    public struct RightHandOculusActions
    {
        private @XRInputAction m_Wrapper;
        public RightHandOculusActions(@XRInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Stick => m_Wrapper.m_RightHandOculus_Stick;
        public InputAction @Grip => m_Wrapper.m_RightHandOculus_Grip;
        public InputAction @Tracked => m_Wrapper.m_RightHandOculus_Tracked;
        public InputAction @PrimaryKey => m_Wrapper.m_RightHandOculus_PrimaryKey;
        public InputAction @PrimaryTouched => m_Wrapper.m_RightHandOculus_PrimaryTouched;
        public InputAction @SecondaryKey => m_Wrapper.m_RightHandOculus_SecondaryKey;
        public InputAction @SecondaryTouched => m_Wrapper.m_RightHandOculus_SecondaryTouched;
        public InputAction @Start => m_Wrapper.m_RightHandOculus_Start;
        public InputAction @StickClicked => m_Wrapper.m_RightHandOculus_StickClicked;
        public InputAction @StickTouched => m_Wrapper.m_RightHandOculus_StickTouched;
        public InputAction @Trigger => m_Wrapper.m_RightHandOculus_Trigger;
        public InputActionMap Get() { return m_Wrapper.m_RightHandOculus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightHandOculusActions set) { return set.Get(); }
        public void SetCallbacks(IRightHandOculusActions instance)
        {
            if (m_Wrapper.m_RightHandOculusActionsCallbackInterface != null)
            {
                @Stick.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStick;
                @Stick.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStick;
                @Stick.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStick;
                @Grip.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnGrip;
                @Tracked.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTracked;
                @Tracked.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTracked;
                @Tracked.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTracked;
                @PrimaryKey.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryKey.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryKey.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryTouched.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @PrimaryTouched.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @PrimaryTouched.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @SecondaryKey.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryKey.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryKey.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryTouched.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @SecondaryTouched.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @SecondaryTouched.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @Start.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStart;
                @StickClicked.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickClicked;
                @StickClicked.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickClicked;
                @StickClicked.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickClicked;
                @StickTouched.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickTouched;
                @StickTouched.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickTouched;
                @StickTouched.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnStickTouched;
                @Trigger.started -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_RightHandOculusActionsCallbackInterface.OnTrigger;
            }
            m_Wrapper.m_RightHandOculusActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Stick.started += instance.OnStick;
                @Stick.performed += instance.OnStick;
                @Stick.canceled += instance.OnStick;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Tracked.started += instance.OnTracked;
                @Tracked.performed += instance.OnTracked;
                @Tracked.canceled += instance.OnTracked;
                @PrimaryKey.started += instance.OnPrimaryKey;
                @PrimaryKey.performed += instance.OnPrimaryKey;
                @PrimaryKey.canceled += instance.OnPrimaryKey;
                @PrimaryTouched.started += instance.OnPrimaryTouched;
                @PrimaryTouched.performed += instance.OnPrimaryTouched;
                @PrimaryTouched.canceled += instance.OnPrimaryTouched;
                @SecondaryKey.started += instance.OnSecondaryKey;
                @SecondaryKey.performed += instance.OnSecondaryKey;
                @SecondaryKey.canceled += instance.OnSecondaryKey;
                @SecondaryTouched.started += instance.OnSecondaryTouched;
                @SecondaryTouched.performed += instance.OnSecondaryTouched;
                @SecondaryTouched.canceled += instance.OnSecondaryTouched;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @StickClicked.started += instance.OnStickClicked;
                @StickClicked.performed += instance.OnStickClicked;
                @StickClicked.canceled += instance.OnStickClicked;
                @StickTouched.started += instance.OnStickTouched;
                @StickTouched.performed += instance.OnStickTouched;
                @StickTouched.canceled += instance.OnStickTouched;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
            }
        }
    }
    public RightHandOculusActions @RightHandOculus => new RightHandOculusActions(this);

    // LeftHandOculus
    private readonly InputActionMap m_LeftHandOculus;
    private ILeftHandOculusActions m_LeftHandOculusActionsCallbackInterface;
    private readonly InputAction m_LeftHandOculus_Stick;
    private readonly InputAction m_LeftHandOculus_Grip;
    private readonly InputAction m_LeftHandOculus_Tracked;
    private readonly InputAction m_LeftHandOculus_PrimaryKey;
    private readonly InputAction m_LeftHandOculus_PrimaryTouched;
    private readonly InputAction m_LeftHandOculus_SecondaryKey;
    private readonly InputAction m_LeftHandOculus_SecondaryTouched;
    private readonly InputAction m_LeftHandOculus_Start;
    private readonly InputAction m_LeftHandOculus_StickClicked;
    private readonly InputAction m_LeftHandOculus_StickTouched;
    private readonly InputAction m_LeftHandOculus_Trigger;
    public struct LeftHandOculusActions
    {
        private @XRInputAction m_Wrapper;
        public LeftHandOculusActions(@XRInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Stick => m_Wrapper.m_LeftHandOculus_Stick;
        public InputAction @Grip => m_Wrapper.m_LeftHandOculus_Grip;
        public InputAction @Tracked => m_Wrapper.m_LeftHandOculus_Tracked;
        public InputAction @PrimaryKey => m_Wrapper.m_LeftHandOculus_PrimaryKey;
        public InputAction @PrimaryTouched => m_Wrapper.m_LeftHandOculus_PrimaryTouched;
        public InputAction @SecondaryKey => m_Wrapper.m_LeftHandOculus_SecondaryKey;
        public InputAction @SecondaryTouched => m_Wrapper.m_LeftHandOculus_SecondaryTouched;
        public InputAction @Start => m_Wrapper.m_LeftHandOculus_Start;
        public InputAction @StickClicked => m_Wrapper.m_LeftHandOculus_StickClicked;
        public InputAction @StickTouched => m_Wrapper.m_LeftHandOculus_StickTouched;
        public InputAction @Trigger => m_Wrapper.m_LeftHandOculus_Trigger;
        public InputActionMap Get() { return m_Wrapper.m_LeftHandOculus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftHandOculusActions set) { return set.Get(); }
        public void SetCallbacks(ILeftHandOculusActions instance)
        {
            if (m_Wrapper.m_LeftHandOculusActionsCallbackInterface != null)
            {
                @Stick.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStick;
                @Stick.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStick;
                @Stick.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStick;
                @Grip.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnGrip;
                @Tracked.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTracked;
                @Tracked.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTracked;
                @Tracked.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTracked;
                @PrimaryKey.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryKey.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryKey.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryKey;
                @PrimaryTouched.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @PrimaryTouched.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @PrimaryTouched.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnPrimaryTouched;
                @SecondaryKey.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryKey.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryKey.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryKey;
                @SecondaryTouched.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @SecondaryTouched.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @SecondaryTouched.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnSecondaryTouched;
                @Start.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStart;
                @StickClicked.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickClicked;
                @StickClicked.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickClicked;
                @StickClicked.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickClicked;
                @StickTouched.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickTouched;
                @StickTouched.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickTouched;
                @StickTouched.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnStickTouched;
                @Trigger.started -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_LeftHandOculusActionsCallbackInterface.OnTrigger;
            }
            m_Wrapper.m_LeftHandOculusActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Stick.started += instance.OnStick;
                @Stick.performed += instance.OnStick;
                @Stick.canceled += instance.OnStick;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Tracked.started += instance.OnTracked;
                @Tracked.performed += instance.OnTracked;
                @Tracked.canceled += instance.OnTracked;
                @PrimaryKey.started += instance.OnPrimaryKey;
                @PrimaryKey.performed += instance.OnPrimaryKey;
                @PrimaryKey.canceled += instance.OnPrimaryKey;
                @PrimaryTouched.started += instance.OnPrimaryTouched;
                @PrimaryTouched.performed += instance.OnPrimaryTouched;
                @PrimaryTouched.canceled += instance.OnPrimaryTouched;
                @SecondaryKey.started += instance.OnSecondaryKey;
                @SecondaryKey.performed += instance.OnSecondaryKey;
                @SecondaryKey.canceled += instance.OnSecondaryKey;
                @SecondaryTouched.started += instance.OnSecondaryTouched;
                @SecondaryTouched.performed += instance.OnSecondaryTouched;
                @SecondaryTouched.canceled += instance.OnSecondaryTouched;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @StickClicked.started += instance.OnStickClicked;
                @StickClicked.performed += instance.OnStickClicked;
                @StickClicked.canceled += instance.OnStickClicked;
                @StickTouched.started += instance.OnStickTouched;
                @StickTouched.performed += instance.OnStickTouched;
                @StickTouched.canceled += instance.OnStickTouched;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
            }
        }
    }
    public LeftHandOculusActions @LeftHandOculus => new LeftHandOculusActions(this);

    // HeadSet
    private readonly InputActionMap m_HeadSet;
    private IHeadSetActions m_HeadSetActionsCallbackInterface;
    private readonly InputAction m_HeadSet_HeadSetPosition;
    private readonly InputAction m_HeadSet_LeftEyePosition;
    private readonly InputAction m_HeadSet_RightEyePosition;
    public struct HeadSetActions
    {
        private @XRInputAction m_Wrapper;
        public HeadSetActions(@XRInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @HeadSetPosition => m_Wrapper.m_HeadSet_HeadSetPosition;
        public InputAction @LeftEyePosition => m_Wrapper.m_HeadSet_LeftEyePosition;
        public InputAction @RightEyePosition => m_Wrapper.m_HeadSet_RightEyePosition;
        public InputActionMap Get() { return m_Wrapper.m_HeadSet; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HeadSetActions set) { return set.Get(); }
        public void SetCallbacks(IHeadSetActions instance)
        {
            if (m_Wrapper.m_HeadSetActionsCallbackInterface != null)
            {
                @HeadSetPosition.started -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnHeadSetPosition;
                @HeadSetPosition.performed -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnHeadSetPosition;
                @HeadSetPosition.canceled -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnHeadSetPosition;
                @LeftEyePosition.started -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnLeftEyePosition;
                @LeftEyePosition.performed -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnLeftEyePosition;
                @LeftEyePosition.canceled -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnLeftEyePosition;
                @RightEyePosition.started -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnRightEyePosition;
                @RightEyePosition.performed -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnRightEyePosition;
                @RightEyePosition.canceled -= m_Wrapper.m_HeadSetActionsCallbackInterface.OnRightEyePosition;
            }
            m_Wrapper.m_HeadSetActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HeadSetPosition.started += instance.OnHeadSetPosition;
                @HeadSetPosition.performed += instance.OnHeadSetPosition;
                @HeadSetPosition.canceled += instance.OnHeadSetPosition;
                @LeftEyePosition.started += instance.OnLeftEyePosition;
                @LeftEyePosition.performed += instance.OnLeftEyePosition;
                @LeftEyePosition.canceled += instance.OnLeftEyePosition;
                @RightEyePosition.started += instance.OnRightEyePosition;
                @RightEyePosition.performed += instance.OnRightEyePosition;
                @RightEyePosition.canceled += instance.OnRightEyePosition;
            }
        }
    }
    public HeadSetActions @HeadSet => new HeadSetActions(this);
    public interface IRightHandOculusActions
    {
        void OnStick(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnTracked(InputAction.CallbackContext context);
        void OnPrimaryKey(InputAction.CallbackContext context);
        void OnPrimaryTouched(InputAction.CallbackContext context);
        void OnSecondaryKey(InputAction.CallbackContext context);
        void OnSecondaryTouched(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnStickClicked(InputAction.CallbackContext context);
        void OnStickTouched(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
    }
    public interface ILeftHandOculusActions
    {
        void OnStick(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnTracked(InputAction.CallbackContext context);
        void OnPrimaryKey(InputAction.CallbackContext context);
        void OnPrimaryTouched(InputAction.CallbackContext context);
        void OnSecondaryKey(InputAction.CallbackContext context);
        void OnSecondaryTouched(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnStickClicked(InputAction.CallbackContext context);
        void OnStickTouched(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
    }
    public interface IHeadSetActions
    {
        void OnHeadSetPosition(InputAction.CallbackContext context);
        void OnLeftEyePosition(InputAction.CallbackContext context);
        void OnRightEyePosition(InputAction.CallbackContext context);
    }
}
